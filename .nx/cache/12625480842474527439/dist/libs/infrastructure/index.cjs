"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const m=require("axios");class h extends Error{constructor(t,e,s){super(e),this.status=t,this.code=s,this.name="ApiException"}}class d{constructor(t,e=1e4){this.axiosInstance=m.create({baseURL:t,timeout:e,headers:{"Content-Type":"application/json"}}),this.setupInterceptors()}setupInterceptors(){this.axiosInstance.interceptors.request.use(t=>{const e=this.getAuthToken();return e&&(t.headers.Authorization=`Bearer ${e}`),t},t=>Promise.reject(t)),this.axiosInstance.interceptors.response.use(t=>t.data,t=>{var a,i,c,p,u;const e=((a=t.response)==null?void 0:a.status)||500,s=((c=(i=t.response)==null?void 0:i.data)==null?void 0:c.message)||t.message||"An error occurred",o=(u=(p=t.response)==null?void 0:p.data)==null?void 0:u.code;throw new h(e,s,o)})}getAuthToken(){return typeof window<"u"?localStorage.getItem("authToken"):null}buildConfig(t){return{headers:t==null?void 0:t.headers,params:t==null?void 0:t.params,timeout:t==null?void 0:t.timeout}}async get(t,e){return this.axiosInstance.get(t,this.buildConfig(e))}async post(t,e,s){return this.axiosInstance.post(t,e,this.buildConfig(s))}async put(t,e,s){return this.axiosInstance.put(t,e,this.buildConfig(s))}async delete(t,e){return this.axiosInstance.delete(t,this.buildConfig(e))}}class l{constructor(t){this.httpClient=t}async getAllProducts(){return(await this.httpClient.get("/products")).data||[]}async getProductById(t){return(await this.httpClient.get(`/products/${t}`)).data}async searchProducts(t){return(await this.httpClient.get(`/suggestions?searchQuery=${encodeURIComponent(t)}`)).data||[]}async getFilteredProducts(t){const e=new URLSearchParams;t.searchQuery&&e.append("search",t.searchQuery),t.colors&&t.colors.length>0&&e.append("colors",t.colors.join(",")),t.sortOrder&&e.append("sort",t.sortOrder);const s=e.toString(),o=s?`/products?${s}`:"/products";return(await this.httpClient.get(o)).data||[]}}class C{constructor(t){this.httpClient=t}async getCart(){return(await this.httpClient.get("/cart")).data||{items:[],totalPrice:0,totalItems:0}}async addToCart(t){return(await this.httpClient.post("/cart",t)).data||{items:[],totalPrice:0,totalItems:0}}async removeFromCart(t,e){return(await this.httpClient.post("/cart/remove",{productId:t,quantity:e})).data||{items:[],totalPrice:0,totalItems:0}}}class y{constructor(t){this.httpClient=t}async updatePassword(t){await this.httpClient.put("/user/password",t)}}class r{constructor(){const t=typeof window<"u"?"/api":`http://localhost:${process.env.PORT||3001}/api`;this.httpClient=new d(t),this.products=new l(this.httpClient),this.cart=new C(this.httpClient),this.user=new y(this.httpClient)}static getInstance(){return r.instance||(r.instance=new r),r.instance}}exports.ApiException=h;exports.AxiosHttpClient=d;exports.CartRepository=C;exports.ProductRepository=l;exports.UserRepository=y;exports.default=r;
